import random
import telebot
from telebot import types
from extensions import CurrencyConverter, APIException, manual
from config import API_TOKEN

amount = 0
values = None

bot = telebot.TeleBot(API_TOKEN)
my_currency_converter = CurrencyConverter()


@bot.message_handler(commands=['start', 'hello'])
def start(message):
    first_name = message.from_user.first_name if message.from_user.first_name else ''
    last_name = message.from_user.last_name if message.from_user.last_name else ', –¥—Ä—É–≥ –º–æ–π'
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {first_name} {last_name}! üòÑ\n–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞—Ç—å '
                                      f'–∫—É—Ä—Å—ã –≤–∞–ª—é—Ç.ü§ë \n–°–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –∑–¥–µ—Å—å: /menu')
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä—É –≤–∞–ª—é—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ üòâ', draw_buttons(message))


@bot.message_handler(commands=['values'])
def values(message):
    bot.send_message(message.chat.id, '<b>–°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ –ª—é–±–æ–º —Å–æ—á–µ—Ç–∞–Ω–∏–∏:</b>\n- <i>–¥–æ–ª–ª–∞—Ä '
                                      '–°–®–ê</i> (USD);\n- <i>–µ–≤—Ä–æ</i> (EUR);\n- <i>—Ä–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å</i> (RUB).',
                     parse_mode='html')


@bot.message_handler(commands=['help'])
def values(message):
    bot.send_message(message.chat.id, manual, parse_mode='html')


@bot.message_handler(commands=['menu'])
def values(message):
    bot.send_message(message.chat.id,
                     '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞:\n/start –∏ /hello - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞;\n/values - '
                     '—Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç;\n/help - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é –±–æ—Ç–∞.')


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    global values
    values = call.data.split('/')
    bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å')
    bot.register_next_step_handler(call.message, amount_of_money)


def amount_of_money(message):
    global amount
    try:
        amount = float(message.text.strip().replace(',', '.'))
    except APIException('–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ —Å—É–º–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'):
        bot.send_message(message.chat.id, 'üôÖ‚Äç‚ôÇ ‚Äç–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ —Å—É–º–º—ã! –í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—É–º–º—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.')
        bot.register_next_step_handler(message, amount_of_money)
        return
    if amount > 0:
        result = my_currency_converter.get_price(amount, values[0], values[1])
        bot.send_message(message.chat.id, f'‚úÖ  {result} \n\t –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–∞—Ä—É –≤–∞–ª—é—Ç üòÑ', draw_buttons(message))

    else:
        try:
            if amount == 0:
                raise APIException('–í–≤–µ–¥–µ–Ω–∞ –Ω—É–ª–µ–≤–∞—è —Å—É–º–º–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏')
            elif amount < 0:
                raise APIException('–í–≤–µ–¥–µ–Ω–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Å—É–º–º–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏')
        except APIException:
            bot.send_message(message.chat.id,
                             f'{message.from_user.first_name}... üòú –ü–æ—à—É—Ç–∏–ª–∏ –∏ —Ö–≤–∞—Ç–∏—Ç! –í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á–∏—Å–ª–æ, '
                             f'–∫–æ—Ç–æ—Ä–æ–µ –±–æ–ª—å—à–µ –Ω–æ–ª—è.')
            bot.register_next_step_handler(message, amount_of_money)


def draw_buttons(message):
    phrases = ['–ß—Ç–æ –∏ –≤–æ —á—Ç–æ –±—É–¥–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å? üòä', '–ß—Ç–æ –∏ –≤–æ —á—Ç–æ –±—É–¥–µ–º –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞—Ç—å? üòÑ',
               '–ß—Ç–æ –∏ –≤–æ —á—Ç–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º? üòâ']
    markup = types.InlineKeyboardMarkup(row_width=2)
    button1 = types.InlineKeyboardButton('RUB -> USD', callback_data='RUB/USD')
    button2 = types.InlineKeyboardButton('RUB -> EUR', callback_data='RUB/EUR')
    button3 = types.InlineKeyboardButton('USD -> RUB', callback_data='USD/RUB')
    button4 = types.InlineKeyboardButton('EUR -> RUB', callback_data='EUR/RUB')
    button5 = types.InlineKeyboardButton('USD -> EUR', callback_data='USD/EUR')
    button6 = types.InlineKeyboardButton('EUR -> USD', callback_data='EUR/USD')
    markup.add(button1, button2, button3, button4, button5, button6)
    bot.send_message(message.chat.id, f'{random.choice(phrases)}', reply_markup=markup)


bot.polling(none_stop=True)
